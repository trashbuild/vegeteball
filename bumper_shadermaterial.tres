[gd_resource type="ShaderMaterial" load_steps=37 format=2]

[ext_resource path="res://Octogon-bumper_anim_texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorCompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeVectorDistance" id=5]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.7, 1, 1.0, 2, 0.1 ]

[sub_resource type="VisualShaderNodeVectorOp" id=8]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0.5, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.25, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
output_port_for_preview = 0
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeVectorCompose" id=12]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.25, 1, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, -0.25, 1, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=51]
operator = 2

[sub_resource type="VisualShaderNodeVectorDistance" id=23]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=24]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=26]

[sub_resource type="VisualShaderNodeScalarOp" id=27]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=29]
output_port_for_preview = 0
uniform_name = "u_bumper_brightness"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorUniform" id=30]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeScalarOp" id=31]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.8 ]
operator = 9

[sub_resource type="VisualShaderNodeVectorDistance" id=32]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=33]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=34]

[sub_resource type="VisualShaderNodeInput" id=16]
output_port_for_preview = 0
input_name = "texture"

[sub_resource type="VisualShaderNodeScalarOp" id=35]

[sub_resource type="VisualShaderNodeScalarOp" id=52]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=17]
source = 5

[sub_resource type="VisualShaderNodeVectorFunc" id=19]
function = 4

[sub_resource type="VisualShaderNodeVectorFunc" id=20]
function = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShader" id=37]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_26;
uniform float u_bumper_brightness : hint_range(0, 1) = 0;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Input:4

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out5p0 = TEXTURE_tex_read.rgb;
		n_out5p1 = TEXTURE_tex_read.a;
	}

// VectorFunc:7
	vec3 n_out7p0;
	{
		vec3 c = n_out5p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out7p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:9
	float n_out9p0 = n_out7p0.x;
	float n_out9p1 = n_out7p0.y;
	float n_out9p2 = n_out7p0.z;

// Texture:26
	vec4 tex_frg_26_read = texture(tex_frg_26, UV.xy);
	vec3 n_out26p0 = tex_frg_26_read.rgb;
	float n_out26p1 = tex_frg_26_read.a;

// Distance:37
	vec3 n_in37p1 = vec3(0.00000, 1.00000, 0.00000);
	float n_out37p0 = distance(n_out26p0, n_in37p1);

// ScalarOp:36
	float n_in36p1 = 0.80000;
	float n_out36p0 = step(n_out37p0, n_in36p1);

// Distance:25
	vec3 n_in25p1 = vec3(1.00000, 0.00000, 0.00000);
	float n_out25p0 = distance(n_out26p0, n_in25p1);

// ScalarOp:30
	float n_in30p1 = 0.50000;
	float n_out30p0 = step(n_out25p0, n_in30p1);

// ScalarOp:40
	float n_out40p0 = n_out36p0 + n_out30p0;

// ScalarOp:38
	float n_out38p0 = n_out9p1 * n_out40p0;

// ScalarUniform:34
	float n_out34p0 = u_bumper_brightness;

// ScalarOp:41
	float n_out41p0 = n_out38p0 * n_out34p0;

// ScalarOp:39
	float n_out39p0 = n_out9p1 + n_out41p0;

// ScalarOp:32
	float n_out32p0 = n_out9p2 * n_out40p0;

// ScalarOp:33
	float n_out33p0 = n_out32p0 * n_out34p0;

// ScalarOp:31
	float n_out31p0 = n_out9p2 + n_out33p0;

// VectorCompose:10
	vec3 n_out10p0 = vec3(n_out9p0, n_out39p0, n_out31p0);

// VectorFunc:8
	vec3 n_out8p0;
	{
		vec3 c = n_out10p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out8p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -444.619, 256.926 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1140, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -1260, 100 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( -760, 180 )
nodes/fragment/5/node = SubResource( 17 )
nodes/fragment/5/position = Vector2( -380, 80 )
nodes/fragment/7/node = SubResource( 19 )
nodes/fragment/7/position = Vector2( -120, -20 )
nodes/fragment/8/node = SubResource( 20 )
nodes/fragment/8/position = Vector2( 920, -40 )
nodes/fragment/9/node = SubResource( 21 )
nodes/fragment/9/position = Vector2( -140, 40 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 920, 20 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 340, -560 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( -560, -680 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( -400, -700 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -220, -740 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -760, -660 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -1220, -320 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( 0, -740 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -1500, -600 )
nodes/fragment/19/node = SubResource( 12 )
nodes/fragment/19/position = Vector2( -980, -640 )
nodes/fragment/20/node = SubResource( 13 )
nodes/fragment/20/position = Vector2( -1160, -560 )
nodes/fragment/21/node = SubResource( 14 )
nodes/fragment/21/position = Vector2( -1120, -680 )
nodes/fragment/22/node = SubResource( 15 )
nodes/fragment/22/position = Vector2( -1540, -780 )
nodes/fragment/23/node = SubResource( 51 )
nodes/fragment/23/position = Vector2( 180, -660 )
nodes/fragment/25/node = SubResource( 23 )
nodes/fragment/25/position = Vector2( -620, 780 )
nodes/fragment/26/node = SubResource( 24 )
nodes/fragment/26/position = Vector2( -540, 260 )
nodes/fragment/30/node = SubResource( 25 )
nodes/fragment/30/position = Vector2( -460, 780 )
nodes/fragment/31/node = SubResource( 26 )
nodes/fragment/31/position = Vector2( 800, 380 )
nodes/fragment/32/node = SubResource( 27 )
nodes/fragment/32/position = Vector2( 80, 560 )
nodes/fragment/33/node = SubResource( 28 )
nodes/fragment/33/position = Vector2( 360, 580 )
nodes/fragment/34/node = SubResource( 29 )
nodes/fragment/34/position = Vector2( -140, 840 )
nodes/fragment/35/node = SubResource( 30 )
nodes/fragment/35/position = Vector2( 360, 920 )
nodes/fragment/36/node = SubResource( 31 )
nodes/fragment/36/position = Vector2( -440, 560 )
nodes/fragment/37/node = SubResource( 32 )
nodes/fragment/37/position = Vector2( -600, 560 )
nodes/fragment/38/node = SubResource( 33 )
nodes/fragment/38/position = Vector2( 80, 300 )
nodes/fragment/39/node = SubResource( 34 )
nodes/fragment/39/position = Vector2( 800, 280 )
nodes/fragment/40/node = SubResource( 35 )
nodes/fragment/40/position = Vector2( -200, 640 )
nodes/fragment/41/node = SubResource( 52 )
nodes/fragment/41/position = Vector2( 370.608, 430.397 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 1, 0, 1, 5, 0, 7, 0, 8, 0, 0, 0, 7, 0, 9, 0, 9, 0, 10, 0, 10, 0, 8, 0, 4, 0, 5, 2, 26, 0, 25, 0, 25, 0, 30, 0, 31, 0, 10, 2, 9, 2, 32, 0, 9, 2, 31, 0, 34, 0, 33, 1, 33, 0, 31, 1, 37, 0, 36, 0, 26, 0, 37, 0, 9, 1, 38, 0, 9, 1, 39, 0, 39, 0, 10, 1, 32, 0, 33, 0, 30, 0, 40, 1, 36, 0, 40, 0, 40, 0, 32, 1, 40, 0, 38, 1, 34, 0, 41, 1, 38, 0, 41, 0, 41, 0, 39, 1, 3, 0, 16, 0, 19, 0, 15, 0, 3, 0, 18, 0, 18, 1, 20, 0, 18, 0, 21, 1, 20, 0, 19, 1, 21, 0, 19, 0, 22, 0, 21, 0, 9, 2, 11, 1, 23, 0, 11, 0, 12, 0, 13, 1, 15, 0, 12, 0, 13, 0, 14, 2, 14, 0, 17, 1, 17, 0, 23, 0, 9, 2, 23, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 37 )
shader_param/u_bumper_brightness = 0.0
